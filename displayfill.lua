local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (2==v29) then function v34() local v43=0;local v44;local v45;while true do if (0==v43) then v44,v45=v9(v27,v30,v30 + (621 -(555 + 64)) );v30=v30 + (933 -(857 + 74)) ;v43=1;end if (1==v43) then return (v45 * 256) + v44 ;end end end v35=nil;function v35() local v46=0;local v47;local v48;local v49;local v50;while true do if (v46==0) then v47,v48,v49,v50=v9(v27,v30,v30 + (571 -(367 + 201)) );v30=v30 + 4 ;v46=1;end if (v46==1) then return (v50 * 16777216) + (v49 * 65536) + (v48 * 256) + v47 ;end end end v36=nil;v29=3;end if (v29==5) then v41=nil;function v41(v51,v52,v53) local v54=0;local v55;local v56;local v57;while true do if (v54==0) then v55=v51[1];v56=v51[2];v54=1;end if (v54==1) then v57=v51[3];return function(...) local v91=v55;local v92=v56;local v93=v57;local v94=v39;local v95=1;local v96= -1;local v97={};local v98={...};local v99=v20("#",...) -1 ;local v100={};local v101={};for v116=0 + 0 ,v99 do if (v116>=v93) then v97[v116-v93 ]=v98[v116 + 1 ];else v101[v116]=v98[v116 + 1 ];end end local v102=(v99-v93) + (958 -(892 + 65)) ;local v103;local v104;while true do local v117=0;while true do if (v117==0) then v103=v91[v95];v104=v103[1];v117=1;end if (v117==1) then if (v104<=54) then if (v104<=26) then if (v104<=12) then if (v104<=5) then if (v104<=2) then if (v104<=0) then v101[v103[2]]={};elseif (v104>1) then local v182=0;local v183;while true do if (v182==0) then v183=v103[2];do return v21(v101,v183,v96);end break;end end else v52[v103[3]]=v101[v103[2]];end elseif (v104<=(7 -4)) then v101[v103[2]][v103[5 -2 ]]=v103[4];elseif (v104>4) then local v186=v103[2];local v187=v103[4];local v188=v186 + 2 ;local v189={v101[v186](v101[v186 + (1 -0) ],v101[v188])};for v352=1,v187 do v101[v188 + v352 ]=v189[v352];end local v190=v189[1];if v190 then local v419=0;while true do if (0==v419) then v101[v188]=v190;v95=v103[3];break;end end else v95=v95 + 1 ;end else local v191=0;local v192;local v193;local v194;while true do if (2==v191) then if (v193>0) then if (v194<=v101[v192 + 1 ]) then v95=v103[3];v101[v192 + 3 ]=v194;end elseif (v194>=v101[v192 + (181 -(67 + 113)) ]) then v95=v103[3];v101[v192 + 3 ]=v194;end break;end if (v191==0) then v192=v103[352 -(87 + 263) ];v193=v101[v192 + 2 ];v191=1;end if (v191==1) then v194=v101[v192] + v193 ;v101[v192]=v194;v191=2;end end end elseif (v104<=(6 + 2)) then if (v104<=6) then v101[v103[4 -2 ]]=v103[3] + v101[v103[4]] ;elseif (v104==7) then v95=v103[3];else v101[v103[2]]=v101[v103[3]][v101[v103[4]]];end elseif (v104<=10) then if (v104>9) then v101[v103[2]]=v101[v103[3]][v101[v103[4]]];else v101[v103[2]]=v103[3] + v101[v103[4]] ;end elseif (v104>11) then local v201=0;local v202;while true do if (v201==0) then v202=v103[2];v101[v202](v101[v202 + 1 ]);break;end end else v101[v103[2]]=v103[3]~=0 ;end elseif (v104<=19) then if (v104<=15) then if (v104<=13) then do return;end elseif (v104==14) then local v204=v103[2];v101[v204](v21(v101,v204 + 1 ,v96));else v101[v103[2]][v101[v103[3]]]=v103[4];end elseif (v104<=17) then if (v104>(12 + 4)) then v101[v103[2]]=v101[v103[11 -8 ]][v103[4]];elseif (v101[v103[2]]~=v103[956 -(802 + 150) ]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104==18) then local v209=0;local v210;local v211;local v212;while true do if (v209==1) then v212=v101[v210 + 2 ];if (v212>0) then if (v211>v101[v210 + 1 ]) then v95=v103[3];else v101[v210 + 3 ]=v211;end elseif (v211<v101[v210 + (1 -0) ]) then v95=v103[3];else v101[v210 + 3 ]=v211;end break;end if (v209==0) then v210=v103[5 -3 ];v211=v101[v210];v209=1;end end else local v213=v103[3];local v214=v101[v213];for v355=v213 + 1 + 0 ,v103[4] do v214=v214   .. v101[v355] ;end v101[v103[999 -(915 + 82) ]]=v214;end elseif (v104<=22) then if (v104<=20) then if (v101[v103[2]]<v103[4]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104>21) then local v217=v103[2];do return v21(v101,v217,v96);end elseif  not v101[v103[5 -3 ]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=24) then if (v104>23) then v101[v103[2]]=v101[v103[3]][v103[4]];else for v356=v103[2],v103[2 + 1 ] do v101[v356]=nil;end end elseif (v104>25) then v101[v103[2]]=v101[v103[3]] + v103[4] ;else local v221=v103[2 -0 ];local v222=v101[v221];local v223=v103[3];for v358=1188 -(1069 + 118) ,v223 do v222[v358]=v101[v221 + v358 ];end end elseif (v104<=40) then if (v104<=33) then if (v104<=29) then if (v104<=27) then local v147=v103[2];local v148={v101[v147](v101[v147 + 1 ])};local v149=0;for v175=v147,v103[4] do v149=v149 + 1 ;v101[v175]=v148[v149];end elseif (v104==28) then local v224=0;local v225;local v226;local v227;while true do if (v224==1) then v227=0 -0 ;for v478=v225,v103[4] do local v479=0;while true do if (v479==0) then v227=v227 + 1 ;v101[v478]=v226[v227];break;end end end break;end if (0==v224) then v225=v103[2];v226={v101[v225](v21(v101,v225 + 1 ,v96))};v224=1;end end else local v228=v103[3 -1 ];v101[v228]=v101[v228](v101[v228 + 1 ]);end elseif (v104<=31) then if (v104==30) then if (v101[v103[2]]~=v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end else local v230=0;local v231;while true do if (v230==0) then v231=v103[1 + 1 ];v101[v231]=v101[v231](v21(v101,v231 + 1 ,v96));break;end end end elseif (v104>32) then do return;end elseif (v101[v103[3 -1 ]]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=36) then if (v104<=34) then if  not v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end elseif (v104==(35 + 0)) then v101[v103[2]][v101[v103[3]]]=v101[v103[4]];else local v235=v103[2];local v236,v237=v94(v101[v235](v21(v101,v235 + 1 ,v96)));v96=(v237 + v235) -1 ;local v238=0;for v361=v235,v96 do v238=v238 + 1 ;v101[v361]=v236[v238];end end elseif (v104<=38) then if (v104>37) then if (v101[v103[2]]==v103[4]) then v95=v95 + 1 ;else v95=v103[794 -(368 + 423) ];end elseif (v101[v103[2]]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104==39) then local v239=v103[2];local v240={v101[v239](v21(v101,v239 + 1 ,v96))};local v241=0;for v364=v239,v103[12 -8 ] do local v365=0;while true do if (0==v365) then v241=v241 + 1 ;v101[v364]=v240[v241];break;end end end else v101[v103[2]]=v101[v103[3]];end elseif (v104<=47) then if (v104<=(61 -(10 + 8))) then if (v104<=41) then if (v101[v103[7 -5 ]]<v103[4]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104>42) then if v101[v103[2]] then v95=v95 + 1 ;else v95=v103[3];end else v101[v103[2]][v103[3]]=v101[v103[4]];end elseif (v104<=45) then if (v104==44) then v101[v103[444 -(416 + 26) ]][v103[3]]=v101[v103[4]];else v101[v103[2]]=v52[v103[9 -6 ]];end elseif (v104==46) then v101[v103[2]]=v103[2 + 1 ];elseif ((v103[3]==v7("\230\125\236\183","\146\185\56\162\225\118\158\89")) or (v103[4 -1 ]==v7("\223\89\17\198\170\4\206","\106\184\60\101\160\207"))) then v101[v103[440 -(145 + 293) ]]=v53;else v101[v103[2]]=v53[v103[433 -(44 + 386) ]];end elseif (v104<=(1536 -(998 + 488))) then if (v104<=48) then local v150=v103[2];v101[v150]=v101[v150](v101[v150 + 1 ]);elseif (v104==49) then local v253=0;local v254;local v255;while true do if (1==v253) then v101[v254 + 1 ]=v255;v101[v254]=v255[v101[v103[4]]];break;end if (v253==0) then v254=v103[1 + 1 ];v255=v101[v103[3]];v253=1;end end else v52[v103[3 + 0 ]]=v101[v103[2]];end elseif (v104<=52) then if (v104==51) then for v366=v103[2],v103[3] do v101[v366]=nil;end else local v258=0;local v259;local v260;local v261;local v262;while true do if (v258==0) then v259=v103[2];v260,v261=v94(v101[v259](v101[v259 + (773 -(201 + 571)) ]));v258=1;end if (v258==2) then for v482=v259,v96 do v262=v262 + 1 ;v101[v482]=v260[v262];end break;end if (1==v258) then v96=(v261 + v259) -(1139 -(116 + 1022)) ;v262=0;v258=2;end end end elseif (v104==(220 -167)) then local v263=v92[v103[3]];local v264;local v265={};v264=v18({},{[v7("\131\14\139\114\114\185\41","\22\220\81\226\28")]=function(v368,v369) local v370=v265[v369];return v370[1][v370[2]];end,[v7("\44\234\140\254\253\206\29\209\135\227","\167\115\181\226\155\138")]=function(v371,v372,v373) local v374=0;local v375;while true do if (v374==0) then v375=v265[v372];v375[1][v375[2]]=v373;break;end end end});for v376=1,v103[4] do local v377=0;local v378;while true do if (v377==1) then if (v378[1]==40) then v265[v376-1 ]={v101,v378[3]};else v265[v376-1 ]={v52,v378[3]};end v100[ #v100 + 1 ]=v265;break;end if (v377==0) then v95=v95 + 1 ;v378=v91[v95];v377=1;end end end v101[v103[2 + 0 ]]=v41(v263,v264,v53);else do return v101[v103[2]]();end end elseif (v104<=81) then if (v104<=67) then if (v104<=60) then if (v104<=57) then if (v104<=55) then local v152=0;local v153;local v154;local v155;while true do if (v152==0) then v153=v103[2];v154=v101[v153 + 2 ];v152=1;end if (v152==2) then if (v154>0) then if (v155<=v101[v153 + 1 ]) then v95=v103[3];v101[v153 + 3 ]=v155;end elseif (v155>=v101[v153 + 1 ]) then v95=v103[3];v101[v153 + 3 ]=v155;end break;end if (v152==1) then v155=v101[v153] + v154 ;v101[v153]=v155;v152=2;end end elseif (v104==56) then if (v103[2]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end else v101[v103[2]]=v101[v103[3]] + v103[14 -10 ] ;end elseif (v104<=58) then local v156=0;local v157;local v158;while true do if (v156==1) then v101[v157 + 1 ]=v158;v101[v157]=v158[v101[v103[4]]];break;end if (v156==0) then v157=v103[2];v158=v101[v103[3]];v156=1;end end elseif (v104==59) then v101[v103[7 -5 ]]=v101[v103[3]]%v103[4] ;else local v269=0;local v270;while true do if (v269==0) then v270=v103[2];v101[v270]=v101[v270]();break;end end end elseif (v104<=63) then if (v104<=61) then v101[v103[2]]=v103[3]~=0 ;elseif (v104>(921 -(814 + 45))) then v101[v103[4 -2 ]]=v101[v103[3]]%v101[v103[4]] ;else v101[v103[2]]();end elseif (v104<=65) then if (v104>64) then local v272=v103[2];local v273=v101[v272];local v274=v103[3];for v387=1,v274 do v273[v387]=v101[v272 + v387 ];end else local v275=v103[2];do return v101[v275](v21(v101,v275 + 1 ,v103[3]));end end elseif (v104==66) then local v276=v103[2];local v277=v101[v276];for v390=v276 + 1 ,v96 do v15(v277,v101[v390]);end else local v278=0;local v279;local v280;while true do if (v278==0) then v279=v103[2];v280=v101[v279];v278=1;end if (1==v278) then for v489=v279 + 1 ,v96 do v15(v280,v101[v489]);end break;end end end elseif (v104<=(4 + 70)) then if (v104<=70) then if (v104<=68) then v101[v103[2]][v101[v103[3]]]=v101[v103[4]];elseif (v104>69) then local v281=v103[2];local v282,v283=v94(v101[v281](v21(v101,v281 + 1 ,v96)));v96=(v283 + v281) -1 ;local v284=0;for v391=v281,v96 do local v392=0;while true do if (v392==0) then v284=v284 + 1 ;v101[v391]=v282[v284];break;end end end else local v285=0;local v286;while true do if (v285==0) then v286=v103[2];v101[v286](v21(v101,v286 + 1 ,v103[3]));break;end end end elseif (v104<=72) then if (v104==71) then if ((v103[3]==v7("\221\7\201\106","\166\130\66\135\60\27\17")) or (v103[3]==v7("\67\79\218\115\53\74\92","\80\36\42\174\21"))) then v101[v103[1 + 1 ]]=v53;else v101[v103[2]]=v53[v103[3]];end elseif (v101[v103[2]]~=v103[4]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104==73) then v101[v103[2]]();else local v287=0;local v288;while true do if (v287==0) then v288=v103[887 -(261 + 624) ];v101[v288]=v101[v288](v21(v101,v288 + 1 ,v96));break;end end end elseif (v104<=77) then if (v104<=75) then local v162=v103[2];local v163=v101[v162];for v178=v162 + 1 ,v103[3] do v15(v163,v101[v178]);end elseif (v104==76) then local v289=0;local v290;while true do if (v289==0) then v290=v103[3 -1 ];v101[v290](v21(v101,v290 + 1 ,v103[3]));break;end end else local v291=0;local v292;while true do if (v291==0) then v292=v103[2];v101[v292](v101[v292 + 1 ]);break;end end end elseif (v104<=79) then if (v104==78) then local v293=0;local v294;local v295;local v296;while true do if (v293==1) then v296=v101[v294 + 2 ];if (v296>0) then if (v295>v101[v294 + 1 ]) then v95=v103[3];else v101[v294 + (1083 -(1020 + 60)) ]=v295;end elseif (v295<v101[v294 + 1 ]) then v95=v103[3];else v101[v294 + 3 ]=v295;end break;end if (v293==0) then v294=v103[2];v295=v101[v294];v293=1;end end else local v297=v92[v103[3]];local v298;local v299={};v298=v18({},{[v7("\113\47\62\116\74\21\47","\26\46\112\87")]=function(v393,v394) local v395=v299[v394];return v395[1][v395[1425 -(630 + 793) ]];end,[v7("\134\28\165\113\168\182\75\176\188\59","\212\217\67\203\20\223\223\37")]=function(v396,v397,v398) local v399=0;local v400;while true do if (v399==0) then v400=v299[v397];v400[1][v400[2]]=v398;break;end end end});for v401=1,v103[4] do v95=v95 + (3 -2) ;local v402=v91[v95];if (v402[1]==40) then v299[v401-1 ]={v101,v402[3]};else v299[v401-(4 -3) ]={v52,v402[3]};end v100[ #v100 + 1 + 0 ]=v299;end v101[v103[2]]=v41(v297,v298,v53);end elseif (v104==80) then v101[v103[2]]=v103[3];elseif (v101[v103[2]]==v103[4]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=(326 -231)) then if (v104<=88) then if (v104<=84) then if (v104<=(1829 -(760 + 987))) then if (v103[1915 -(1789 + 124) ]==v101[v103[4]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104==83) then v101[v103[2]]=v101[v103[3]];else local v306=v103[2];local v307,v308=v94(v101[v306](v21(v101,v306 + 1 ,v103[3])));v96=(v308 + v306) -1 ;local v309=766 -(745 + 21) ;for v404=v306,v96 do local v405=0;while true do if (v405==0) then v309=v309 + 1 ;v101[v404]=v307[v309];break;end end end end elseif (v104<=86) then if (v104>85) then local v310=v103[3];local v311=v101[v310];for v406=v310 + 1 ,v103[4] do v311=v311   .. v101[v406] ;end v101[v103[1 + 1 ]]=v311;else v101[v103[2]]=v101[v103[3]]%v103[10 -6 ] ;end elseif (v104==(341 -254)) then if v101[v103[1 + 1 ]] then v95=v95 + 1 ;else v95=v103[3];end else local v314=v103[2];v101[v314]=v101[v314](v21(v101,v314 + 1 ,v103[3]));end elseif (v104<=(72 + 19)) then if (v104<=(1144 -(87 + 968))) then v101[v103[2]][v103[3]]=v103[4];elseif (v104>90) then v95=v103[3];elseif (v101[v103[2]]~=v101[v103[17 -13 ]]) then v95=v95 + 1 ;else v95=v103[3];end elseif (v104<=93) then if (v104>92) then local v317=0;local v318;local v319;while true do if (v317==1) then for v496=1, #v100 do local v497=v100[v496];for v513=0, #v497 do local v514=v497[v513];local v515=v514[1];local v516=v514[2];if ((v515==v101) and (v516>=v318)) then v319[v516]=v515[v516];v514[1]=v319;end end end break;end if (v317==0) then v318=v103[2];v319={};v317=1;end end else local v320=0;local v321;while true do if (0==v320) then v321=v103[2];do return v101[v321](v21(v101,v321 + 1 + 0 ,v103[3]));end break;end end end elseif (v104>94) then v101[v103[2]][v101[v103[3]]]=v103[4];else local v324=0;local v325;while true do if (v324==0) then v325=v103[2];v101[v325]=v101[v325]();break;end end end elseif (v104<=102) then if (v104<=98) then if (v104<=96) then local v166=v103[2];local v167=v103[4];local v168=v166 + 2 ;local v169={v101[v166](v101[v166 + 1 ],v101[v168])};for v179=1,v167 do v101[v168 + v179 ]=v169[v179];end local v170=v169[1];if v170 then local v326=0;while true do if (v326==0) then v101[v168]=v170;v95=v103[3];break;end end else v95=v95 + 1 ;end elseif (v104>97) then do return v101[v103[2]]();end else local v327=0;local v328;local v329;local v330;while true do if (v327==0) then v328=v103[2];v329={v101[v328](v101[v328 + 1 ])};v327=1;end if (v327==1) then v330=0;for v498=v328,v103[4] do v330=v330 + 1 ;v101[v498]=v329[v330];end break;end end end elseif (v104<=100) then if (v104>99) then local v331=0;local v332;local v333;local v334;local v335;while true do if (v331==2) then for v501=v332,v96 do v335=v335 + 1 ;v101[v501]=v333[v335];end break;end if (v331==0) then v332=v103[2];v333,v334=v94(v101[v332](v101[v332 + 1 ]));v331=1;end if (v331==1) then v96=(v334 + v332) -1 ;v335=0;v331=2;end end else v101[v103[2]]= #v101[v103[3]];end elseif (v104==101) then v101[v103[4 -2 ]]= #v101[v103[3]];else local v338=v103[2];local v339,v340=v94(v101[v338](v21(v101,v338 + 1 ,v103[3])));v96=(v340 + v338) -1 ;local v341=0;for v407=v338,v96 do local v408=0;while true do if (v408==0) then v341=v341 + (1414 -(447 + 966)) ;v101[v407]=v339[v341];break;end end end end elseif (v104<=105) then if (v104<=103) then local v171=0;local v172;local v173;while true do if (v171==0) then v172=v103[5 -3 ];v173=v101[v103[3]];v171=1;end if (v171==1) then v101[v172 + 1 ]=v173;v101[v172]=v173[v103[4]];break;end end elseif (v104==(1921 -(1703 + 114))) then v101[v103[2]]=v101[v103[3]]%v101[v103[4]] ;else local v343=v103[2];local v344={};for v414=1, #v100 do local v415=0;local v416;while true do if (v415==0) then v416=v100[v414];for v517=0, #v416 do local v518=0;local v519;local v520;local v521;while true do if (v518==0) then v519=v416[v517];v520=v519[1];v518=1;end if (v518==1) then v521=v519[2];if ((v520==v101) and (v521>=v343)) then v344[v521]=v520[v521];v519[1]=v344;end break;end end end break;end end end end elseif (v104<=107) then if (v104>106) then v101[v103[703 -(376 + 325) ]]=v52[v103[4 -1 ]];else local v347=v103[2];v101[v347]=v101[v347](v21(v101,v347 + (2 -1) ,v103[3]));end elseif (v104>108) then v101[v103[2]]={};else local v350=0;local v351;while true do if (v350==0) then v351=v103[2];v101[v351](v21(v101,v351 + 1 ,v96));break;end end end v95=v95 + 1 ;break;end end end end;end end end return v41(v40(),{},v28)(...);end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\244\195","\178\218\237\200"),function(v58) if (v9(v58,2)==(246 -167)) then local v81=0;while true do if (v81==0) then v31=v8(v11(v58,1,2 -1 ));return "";end end else local v82=0;local v83;while true do if (v82==0) then v83=v10(v8(v58,30 -14 ));if v31 then local v122=0;local v123;while true do if (v122==0) then v123=v13(v83,v31);v31=nil;v122=1;end if (v122==1) then return v123;end end else return v83;end break;end end end end);v32=nil;v29=1;end if (v29==4) then v39=nil;function v39(...) return {...},v20("#",...);end v40=nil;function v40() local v59=0;local v60;local v61;local v62;local v63;local v64;local v65;while true do if (0==v59) then v60={};v61={};v62={};v63={v60,v61,nil,v62};v59=1;end if (2==v59) then for v105=1,v35() do local v106=0;local v107;while true do if (v106==0) then v107=v33();if (v32(v107,1,1 -0 )==0) then local v128=0;local v129;local v130;local v131;while true do if (v128==1) then v131={v34(),v34(),nil,nil};if (v129==0) then v131[3]=v34();v131[4]=v34();elseif (v129==(4 -3)) then v131[3]=v35();elseif (v129==2) then v131[3]=v35() -(2^16) ;elseif (v129==3) then local v174=0;while true do if (v174==0) then v131[120 -(32 + 85) ]=v35() -(2^16) ;v131[4]=v34();break;end end end v128=2;end if (v128==3) then if (v32(v130,3,3)==1) then v131[4]=v65[v131[4]];end v60[v105]=v131;break;end if (v128==0) then v129=v32(v107,2,3);v130=v32(v107,4,1071 -(68 + 997) );v128=1;end if (v128==2) then if (v32(v130,1,1)==1) then v131[2]=v65[v131[2]];end if (v32(v130,2,2)==1) then v131[3]=v65[v131[3]];end v128=3;end end end break;end end end for v108=1,v35() do v61[v108-1 ]=v40();end return v63;end if (v59==1) then v64=v35();v65={};for v110=1,v64 do local v111=0;local v112;local v113;while true do if (v111==0) then v112=v33();v113=nil;v111=1;end if (v111==1) then if (v112==1) then v113=v33()~=0 ;elseif (v112==2) then v113=v36();elseif (v112==3) then v113=v37();end v65[v110]=v113;break;end end end v63[3]=v33();v59=2;end end end v29=5;end if (3==v29) then function v36() local v66=0;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v66==2) then v71=v32(v68,21,31);v72=((v32(v68,32)==(878 -(282 + 595))) and  -1) or 1 ;v66=3;end if (v66==0) then v67=v35();v68=v35();v66=1;end if (3==v66) then if (v71==0) then if (v70==0) then return v72 * 0 ;else local v125=0;while true do if (0==v125) then v71=1;v69=0;break;end end end elseif (v71==2047) then return ((v70==0) and (v72 * (1/(1637 -(1523 + 114))))) or (v72 * NaN) ;end return v16(v72,v71-(920 + 103) ) * (v69 + (v70/(2^52))) ;end if (v66==1) then v69=1;v70=(v32(v68,1,947 -(214 + 713) ) * ((1 + 1)^(6 + 26))) + v67 ;v66=2;end end end v37=nil;function v37(v73) local v74=0;local v75;local v76;while true do if (2==v74) then v76={};for v114=1, #v75 do v76[v114]=v10(v9(v11(v75,v114,v114)));end v74=3;end if (v74==0) then v75=nil;if  not v73 then v73=v35();if (v73==0) then return "";end end v74=1;end if (3==v74) then return v14(v76);end if (v74==1) then v75=v11(v27,v30,(v30 + v73) -1 );v30=v30 + v73 ;v74=2;end end end v38=v35;v29=4;end if (v29==1) then function v32(v77,v78,v79) if v79 then local v84=(v77/(2^(v78-1)))%(2^(((v79-1) -(v78-1)) + 1)) ;return v84-(v84%(2 -1)) ;else local v85=0;local v86;while true do if (v85==0) then v86=2^(v78-1) ;return (((v77%(v86 + v86))>=v86) and 1) or 0 ;end end end end v33=nil;function v33() local v80=v9(v27,v30,v30);v30=v30 + 1 ;return v80;end v34=nil;v29=2;end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   fill

]]--

